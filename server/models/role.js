import Model from './base.js'; // Ensure you include .js extension

/**
 * @swagger
 * components:
 *   schemas:
 *     Role:
 *       type: object
 *       required:
 *         - eid
 *         - name
 *       properties:
 *         id:
 *           type: integer
 *           description: autogenerated id
 *         name:
 *           type: string
 *           minLength: 1
 *           maxLength: 255
 *           description: the name of the role
 *       example:
 *         id: 1
 *         name: admin
 */
class Role extends Model {
  // Table name is the only required property.
  static get tableName() {
    return 'roles';
  }

  // Each model must have a column (or a set of columns) that uniquely
  // identifies the rows. The column(s) can be specified using the `idColumn`
  // property. `idColumn` returns `id` by default and doesn't need to be
  // specified unless the model's primary key is something else.
  static get idColumn() {
    return 'id';
  }

  // Optional JSON schema. This is not the database schema!
  // No tables or columns are generated based on this. This is only
  // used for input validation. Whenever a model instance is created
  // either explicitly or implicitly it is checked against this schema.
  // See http://json-schema.org/ for more info.
  static get jsonSchema() {
    return {
      type: 'object',
      required: ['name'],
      properties: {
        name: { type: 'string', minLength: 1, maxLength: 255 },
      },
    };
  }

  // This object defines the relations to other models.
  static get relationMappings() {
    // Importing models here is one way to avoid require loops.
    const User = require('./user.js'); // Ensure you include .js extension

    return {
      users: {
        relation: Model.ManyToManyRelation,
        modelClass: User,
        join: {
          from: 'role.id',
          // ManyToMany relation needs the `through` object
          // to describe the join table.
          through: {
            from: 'user_roles.role_id',
            to: 'user_roles.user_id',
          },
          to: 'users.id',
        },
        filter: (builder) => builder.select('id', 'eid', 'name'),
      },
    };
  }
}

export default Role;
