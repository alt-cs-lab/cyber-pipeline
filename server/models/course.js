import Model from './base.js';

/**
 * @swagger
 * components:
 *   schemas:
 *     Course:
 *       type: object
 *       required:
 *         - name
 *       properties:
 *         id:
 *           type: integer
 *           description: autogenerated id
 *         name:
 *           type: string
 *           minLength: 1
 *           maxLength: 255
 *           description: the name of the course
 *         notes:
 *           type: string
 *           description: any notes about the course
 *         teachers:
 *           type: array
 *           items:
 *             type: object
 *             properties:
 *               id:
 *                 type: integer
 *                 description: autogenerated id
 *               name:
 *                 type: string
 *                 description: the name of the teacher
 *               notes:
 *                 type: string
 *                 description: notes about teacher in the course
 *               status:
 *                 type: integer
 *                 description: grade status for the teacher (0 - enrolled, 1 - pass, 2 - incomplete, 3 - fail, 4 - withdrawn)
 *       example:
 *         id: 1
 *         name: CC 710 S23
 *         notes: First offering under new CC 710 heading
 *         teachers:
 *           - id: 1
 *             name: Test Teacher
 *             notes: Teacher is doing well
 *             grade: 0
 */
class Course extends Model {
  // Table name is the only required property.
  static get tableName() {
    return 'courses';
  }

  // Each model must have a column (or a set of columns) that uniquely
  // identifies the rows. The column(s) can be specified using the `idColumn`
  // property. `idColumn` returns `id` by default and doesn't need to be
  // specified unless the model's primary key is something else.
  static get idColumn() {
    return 'id';
  }

  // Optional JSON schema. This is not the database schema!
  // No tables or columns are generated based on this. This is only
  // used for input validation. Whenever a model instance is created
  // either explicitly or implicitly it is checked against this schema.
  // See http://json-schema.org/ for more info.
  static get jsonSchema() {
    return {
      type: 'object',
      required: ['name'],
      properties: {
        name: { type: 'string', minLength: 1, maxLength: 255 },
      },
    };
  }

  // This object defines the relations to other models.
  static get relationMappings() {
    // Importing models here is one way to avoid require loops.
    const Teacher = require('./teacher.js');

    return {
      teachers: {
        relation: Model.ManyToManyRelation,
        modelClass: Teacher,
        join: {
          from: 'courses.id',
          through: {
            from: 'teacher_courses.course_id',
            to: 'teacher_courses.teacher_id',
            extra: ['notes', 'status'],
          },
          to: 'teachers.id',
        },
        filter: (builder) =>
          builder.select(
            'id',
            'name',
            'teacher_courses.notes',
            'teacher_courses.status'
          ),
      },
      teachers_raw: {
        relation: Model.ManyToManyRelation,
        modelClass: Teacher,
        join: {
          from: 'courses.id',
          through: {
            from: 'teacher_courses.course_id',
            to: 'teacher_courses.teacher_id',
            extra: ['notes', 'status'],
          },
          to: 'teachers.id',
        },
      },
    };
  }
}

export default Course;
